#####@@@@@ PLOT FIBER SPHERE (QUBIT-A)  @@@@@#####

# import numpy as np
# import quaternion
# For mp.atan2(y,x) calculation
# from mpmath import mp
# mp.dps=15; mp.pretty=True; pi2=2*np.pi

fig = plt.figure(figsize=(5,5), dpi=200)
ax = fig.add_subplot(111, projection='3d')
ax.set_aspect('equal')
ax.set_axis_off()

#plot Fiber-qubit (qubit-A) quasi-Bloch sphere and vector
ax.plot_surface(x, y, z,  rstride=2, cstride=2, color='y', linewidth=0, alpha=0.1)
plt.quiver(0,0,0,xA,yA,zA, length=1, arrow_length_ratio=0.15, normalize=True, color='m', linewidth=0.7) #, alpha=0.5)
#axes ticks
ax.set_zticks([-1,-0.5,0,0.5,1])
ax.set_xticks([-1,0,1])
ax.set_yticks([-1,0,1])
#axes limits
axcenter=0
axlim=1.1
ax.set_xlim(axcenter-axlim, axcenter+axlim)
ax.set_ylim(axcenter-axlim, axcenter+axlim)
ax.set_zlim(axcenter-axlim, axcenter+axlim)

#horizontal circle
ax.plot(np.sin(u),np.cos(u),0,color='y', linestyle = 'dashed', linewidth=1, alpha=0.25) #hori back
ax.plot(np.sin(horiz_front),np.cos(horiz_front),0,color='y', linewidth=1, alpha=0.5) #hori front
#vertical circle
ax.plot(a[0] * np.sin(u) + b[0] * np.cos(u), b[1] * np.cos(u), a[2] * np.sin(u) + b[2] * np.cos(u),color='y', linestyle = 'dashed', linewidth=1, alpha=0.25)
ax.plot(a[0] * np.sin(vert_front) + b[0] * np.cos(vert_front), b[1] * np.cos(vert_front), a[2] * np.sin(vert_front) + b[2] * np.cos(vert_front),color='y', linewidth=1, alpha=0.5)

#draw axes
ax.plot3D(line1, line0, line0, 'k', linewidth=1) #x-axis
ax.plot3D(line0, line1, line0, 'k', linewidth=1) #y-axis
ax.plot3D(line0, line0, line1, 'k', linewidth=1) #z-axis

#axes labels and other labels
axis_font={'fontname':'Arial', 'size':'11', 'weight':'ultralight'}
label_font={'fontname':'Times New Roman', 'size':'11', 'weight':'normal',
           'verticalalignment':'bottom'}
title_font={'fontname':'Times New Roman', 'size':'12', 'weight':'bold'}
ax.text(1,0,-0.14, "$x_f$") #, **axis_font)
ax.text(0,.85,-0.15, "$y_f$")
ax.text(0,0.05,.91, "$z_f$")
thetaA_label=round(mp.degrees(thetaA)); phiA_label=round(mp.degrees(new_phiA))
# if thetaA_label == 0 or thetaA_label == 180:
#     phiA_label=0
angle_value_text='('+str(thetaA_label)+','+str(phiA_label)+')'
if thetaA_label == 0 or thetaA_label == 180:
    angle_value_text='('+str(thetaA_label)+', '+"arb"+')'

ax.text(xA, yA-0.2, zA-0.03, angle_value_text, color='magenta', **label_font) #(theta,phi)
# angle_coor_text='($\\theta_f, \phi_f-2\\zeta_f$)=' + angle_value_text
# zeta_text='; $\\zeta_f$='+str(round(mp.degrees(zetaA)))
# all_coor_text=angle_coor_text+zeta_text
# ax.text(1, -0.3, -1.1, all_coor_text, color='magenta', **label_font) #zeta=
angle_coor_text='($\\theta_f,\phi_f-2\\zeta_f$) = ' + angle_value_text
zeta_text='$\\zeta_f$='+str(round(mp.degrees(zetaA)))
if mp.degrees(zetaA) == 360:
    zeta_text='$\\zeta_f$='+str(0)
ax.text(1, -0.3, -1.03, angle_coor_text, color='magenta', **label_font) #zeta=
ax.text(1, 0.35, -1.15, zeta_text, color='magenta', **label_font) 
ax.text(-1, -1, 1, "FIBER(A)", color="black", **title_font)

#display in nice view
ax.view_init(elev = elev, azim = 30)
plt.show()
